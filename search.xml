<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/03/23/hello-world/"/>
      <url>/2018/03/23/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>排序算法总结(上)</title>
      <link href="/2018/03/22/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(%E4%B8%8A)/"/>
      <url>/2018/03/22/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93(%E4%B8%8A)/</url>
      <content type="html"><![CDATA[<h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><hr><h2 id="What’s-Algorithm"><a href="#What’s-Algorithm" class="headerlink" title="What’s Algorithm ?"></a>What’s Algorithm ?</h2><p>提及“<strong>算法</strong>”，小白面对高大上说词仰慕之心油然而生 @o@</p><p>然而，算法并不神秘 = =</p><p>顾名思义，<strong>计算方法</strong>简称算法（什，什，什，什么！这么简单？→_→）</p><p>举个栗子：</p><blockquote><p>从小学就接触的乘法：对 n+n+n+…+n 的简写就是一种算法（递推法<a href="递推法即是把一个复杂的庞大的计算过程转化为简单过程的多次重复">^A</a>）,<br>算法注定要有输入与输出：算式中的 n 即为输入，乘积即为输出。</p></blockquote><p>注：</p><ul><li>算法中的状态变化是不确定的</li><li>算法必定能在执行有限个步骤之后终止</li><li>某些算法加入随机输入，称为随机化算法</li></ul><h2 id="How-to-Assess-Algorithm"><a href="#How-to-Assess-Algorithm" class="headerlink" title="How to Assess Algorithm ?"></a>How to Assess Algorithm ?</h2><p>对算法的评定分析主要从<strong>时间复杂度</strong>(所耗时间长短)与<strong>空间复杂度</strong>(空间开支大小)来考虑。</p><p>关于复杂度的计算需要引入如下渐近记号：</p><blockquote><p><em>大O记号：</em></p><blockquote><p><em>O(g(n)) = { f(n) : 存在正常数c和n0 ，使对所有的n &gt;= n0，都有 0 &lt;= f(n) &lt;= cg(n) }</em></p></blockquote></blockquote><blockquote><p><em>大Ω记号：</em></p><blockquote><p><em>Ω(g(n)) = { f(n) : 存在正常数c和n0 ，使对所有的n &gt;= n0，都有 0 &lt;= cg(n) &lt;= f(n) }</em></p></blockquote></blockquote><blockquote><p><em>大Θ记号：</em></p><blockquote><p><em>Θ(g(n)) = { f(n) : 存在正常数c1和c2和n0 ，使对所有的n &gt;= n0，都有 0 &lt;= c1g(n) &lt;= f(n) &lt;= c2g(n) }</em></p></blockquote></blockquote><p><em>数学证明资料：<a href="http://www.cnblogs.com/zabery/archive/2011/07/19/2110994.html" target="_blank" rel="noopener">计算机算法分析之渐进记号</a></em></p><p>具体计算方式将于实例中给出 ～(~▽~)～</p><h2 id="DIY-Algorithm-！"><a href="#DIY-Algorithm-！" class="headerlink" title="DIY Algorithm ！"></a>DIY Algorithm ！</h2><p>以下给出排序算法C++代码：</p><p>1.冒泡排序（Bubble Sort）<a href="冒泡排序的思想是让最大的数浮动到数组最后的位置，其次大的数浮动到数组倒数第二个位置，依次推类">^B</a><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(T arr[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">T temp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n - <span class="number">1</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n - <span class="number">1</span> - i;j++)</span><br><span class="line"><span class="keyword">if</span>(arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">temp = arr[j];</span><br><span class="line">arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>时间复杂度分析：</p><p>考虑最坏情况–将逆序数列变为顺序（此情况下，每一次比较都需要进行交换运算） T_T</p><blockquote><p>再举个栗子：<strong>数列 5 4 3 2 1 进行冒泡升序排列</strong><br>第一次外层循环从第一个数5开始到倒数第二个数2结束，<br>共进行4次比较交换运算，5移到末尾。<br>第二次外层循环从第一个数4开始到倒数第三个数2结束。<br>共进行3次比较交换运算，4移到倒数第二个数。<br>……<br>依次推类，总比较次数为 4 + 3 + 2 + 1 = 10 次</p></blockquote><p>证明：</p><p>根据数学归纳法,对于n位的数列则有比较次数为<code>(n-1) + (n-2) + ... + 1 = n \* (n - 1) / 2 = (n^2 - n) / 2</code></p><p>如图<img src="http://images.51cto.com/files/uploadimg/20110826/211021569.jpg" alt="比较次数"></p><p>若n = 10000，则<code>(n^2 - n) / 2 = (100000000 - 10000) / 2</code></p><p>相对 100000000 来说 10000 微乎其微，故总计算次数约为<code>0.5 \* N^2</code></p><p>用O(N^2)就表示了其数量级（忽略前面系数0.5）</p><p>得 <strong>冒泡排序的时间复杂度为O(N^2)</strong><br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//冒泡排序改进版：若遍历中得知数组有序则结束排序</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(T arr[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">T temp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n - <span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n - <span class="number">1</span> - i;j++)</span><br><span class="line"><span class="keyword">if</span>(arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">temp = arr[j];</span><br><span class="line">arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag == <span class="literal">false</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>改进算法后，对于一个有序数组完成一次外层循环后就会结束，共发生 N - 1 次比较，故升级版冒泡排序在最优情况下的时间复杂度为O(N)</p><p>2.插入排序(Insert Sort)<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insertSort</span><span class="params">(T arr[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">T temp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; n;i++)</span><br><span class="line"><span class="keyword">if</span>(arr[i] &lt; arr[i - <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">temp = arr[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = i - <span class="number">1</span>;j &gt;= <span class="number">0</span> &amp;&amp; arr[j] &gt; temp;j--)</span><br><span class="line">arr[j + <span class="number">1</span>] = arr[j];</span><br><span class="line">arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><em>资料：<a href="http://baidu.ku6.com/watch/05586300336858352205.html" target="_blank" rel="noopener">插入排序舞蹈</a></em></p><p>3.*归并排序（Merge Sort）<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(T arr[],T temp[],<span class="keyword">int</span> start,<span class="keyword">int</span> last)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(start &lt; last)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> mid = (start + last) / <span class="number">2</span>;</span><br><span class="line">mergeSort(arr,temp,start,mid);</span><br><span class="line">mergeSort(arr,temp,mid + <span class="number">1</span>,last);</span><br><span class="line">arrUnion(arr,temp,start,mid,last);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">arrUnion</span><span class="params">(T arr[],T temp[],<span class="keyword">int</span> start,<span class="keyword">int</span> mid,<span class="keyword">int</span> last)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,k;</span><br><span class="line">i = start;</span><br><span class="line">j = mid + <span class="number">1</span>;</span><br><span class="line">k = start;</span><br><span class="line"><span class="keyword">while</span>(i != mid + <span class="number">1</span> &amp;&amp; j != last + <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(arr[i] &lt; arr[j])</span><br><span class="line">temp[k++] = arr[i++];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">temp[k++] = arr[j++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(i != mid + <span class="number">1</span>)</span><br><span class="line">temp[k++] = arr[i++];</span><br><span class="line"><span class="keyword">while</span>(j != last + <span class="number">1</span>)</span><br><span class="line">temp[k++] = arr[j++];</span><br><span class="line"><span class="keyword">for</span>(i = start;i &lt; last + <span class="number">1</span>;i++)</span><br><span class="line">arr[i] = temp[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><em>资料：<a href="http://visualgo.net/sorting" target="_blank" rel="noopener">排序动画演示</a></em></p><h2 id="Comparison"><a href="#Comparison" class="headerlink" title="Comparison ."></a>Comparison .</h2><p>下面我们通过这段C语言代码比较排序速度，直观感受时间复杂度。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 5000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printArr</span><span class="params">(T arr[],<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(T arr[],<span class="keyword">int</span> start,<span class="keyword">int</span> last)</span></span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quickSortRand</span><span class="params">(T arr[],<span class="keyword">int</span> start,<span class="keyword">int</span> last)</span></span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(T arr[],T temp[],<span class="keyword">int</span> start,<span class="keyword">int</span> last)</span></span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insertSort</span><span class="params">(T arr[],<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(T arr[],<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubbleSortPlus</span><span class="params">(T arr[],<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">choseSort</span><span class="params">(T arr[],<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> * argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">clock_t</span> start, end;</span><br><span class="line">    <span class="keyword">int</span> a[N], b[N], c[N], d[N], e[N], f[N], g[N];</span><br><span class="line">    srand(time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        g[i] = f[i] = e[i] = d[i] = c[i] = b[i] = a[i] = rand()%<span class="number">100</span> + rand()%<span class="number">1000</span>;</span><br><span class="line">        <span class="comment">//g[i] = f[i] = e[i] = d[i] = c[i] = b[i] = a[i] = N - i;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">start = clock();</span><br><span class="line">    quickSortRand(a,<span class="number">0</span>,N - <span class="number">1</span>);</span><br><span class="line">    end = clock();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"随机快速排序用时%lfsec\n"</span>,(<span class="keyword">double</span>)(end - start) / CLOCKS_PER_SEC);</span><br><span class="line">    <span class="comment">//printArr(a,N);</span></span><br><span class="line"></span><br><span class="line">start = clock();</span><br><span class="line">    quickSort(b,<span class="number">0</span>,N - <span class="number">1</span>);</span><br><span class="line">    end = clock();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"快速排序用时%lfsec\n"</span>,(<span class="keyword">double</span>)(end - start) / CLOCKS_PER_SEC);</span><br><span class="line">    <span class="comment">//printArr(b,N);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span>* temp = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>) * N);</span><br><span class="line">    start = clock();</span><br><span class="line">    mergeSort(c,temp,<span class="number">0</span>,N - <span class="number">1</span>);</span><br><span class="line">    end = clock();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"归并排序用时%lfsec\n"</span>,(<span class="keyword">double</span>)(end - start) / CLOCKS_PER_SEC);</span><br><span class="line">    <span class="comment">//printArr(c,N);</span></span><br><span class="line">    <span class="built_in">free</span>(temp);</span><br><span class="line"></span><br><span class="line">    start = clock();</span><br><span class="line">    insertSort(d,N);</span><br><span class="line">    end = clock();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"插入排序用时%lfsec\n"</span>,(<span class="keyword">double</span>)(end - start) / CLOCKS_PER_SEC);</span><br><span class="line">    <span class="comment">//printArr(d,N);</span></span><br><span class="line"></span><br><span class="line">    start = clock();</span><br><span class="line">    bubbleSort(e,N);</span><br><span class="line">    end = clock();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"冒泡排序用时%lfsec\n"</span>,(<span class="keyword">double</span>)(end - start) / CLOCKS_PER_SEC);</span><br><span class="line">    <span class="comment">//printArr(e,N);</span></span><br><span class="line"></span><br><span class="line">    start = clock();</span><br><span class="line">    bubbleSortPlus(f,N);</span><br><span class="line">    end = clock();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"升级版冒泡排序用时%lfsec\n"</span>,(<span class="keyword">double</span>)(end - start) / CLOCKS_PER_SEC);</span><br><span class="line">    <span class="comment">//printArr(f,N);</span></span><br><span class="line"></span><br><span class="line">start = clock();</span><br><span class="line">    choseSort(g,N);</span><br><span class="line">    end = clock();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"选择排序用时%lfsec\n"</span>,(<span class="keyword">double</span>)(end - start) / CLOCKS_PER_SEC);</span><br><span class="line">    <span class="comment">//printArr(g,N);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(T arr[],<span class="keyword">int</span> start,<span class="keyword">int</span> last)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(start &lt; last)</span><br><span class="line">&#123;</span><br><span class="line">T temp;</span><br><span class="line"><span class="keyword">int</span> i = start;</span><br><span class="line"><span class="keyword">int</span> j = last;</span><br><span class="line"><span class="keyword">while</span>(i != j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(arr[j] &gt;= arr[start] &amp;&amp; j != i)</span><br><span class="line">j--;</span><br><span class="line"><span class="keyword">while</span>(arr[i] &lt;= arr[start] &amp;&amp; i != j)</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span>(i != j)</span><br><span class="line">&#123;</span><br><span class="line">temp = arr[i];</span><br><span class="line">arr[i] = arr[j];</span><br><span class="line">arr[j] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">temp = arr[i];</span><br><span class="line">arr[i] = arr[start];</span><br><span class="line">arr[start] = temp;</span><br><span class="line">quickSort(arr, start, i - <span class="number">1</span>);</span><br><span class="line">quickSort(arr, i + <span class="number">1</span>, last);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quickSortRand</span><span class="params">(T arr[],<span class="keyword">int</span> start,<span class="keyword">int</span> last)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(start &lt; last)</span><br><span class="line">&#123;</span><br><span class="line">T temp;</span><br><span class="line"><span class="keyword">int</span> i = start;</span><br><span class="line"><span class="keyword">int</span> j = last;</span><br><span class="line"><span class="keyword">int</span> pos = rand() % (last - start) + start;</span><br><span class="line">temp = arr[start];</span><br><span class="line">arr[start] = arr[pos];</span><br><span class="line">arr[pos] = temp;</span><br><span class="line"><span class="keyword">while</span>(i != j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(arr[j] &gt;= arr[start] &amp;&amp; j != i)</span><br><span class="line">j--;</span><br><span class="line"><span class="keyword">while</span>(arr[i] &lt;= arr[start] &amp;&amp; i != j)</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span>(i != j)</span><br><span class="line">&#123;</span><br><span class="line">temp = arr[i];</span><br><span class="line">arr[i] = arr[j];</span><br><span class="line">arr[j] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">temp = arr[i];</span><br><span class="line">arr[i] = arr[start];</span><br><span class="line">arr[start] = temp;</span><br><span class="line">quickSortRand(arr, start, i - <span class="number">1</span>);</span><br><span class="line">quickSortRand(arr, i + <span class="number">1</span>, last);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(T arr[],T temp[],<span class="keyword">int</span> start,<span class="keyword">int</span> last)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(start &lt; last)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (start + last) / <span class="number">2</span>;</span><br><span class="line">        mergeSort(arr,temp,start,mid);</span><br><span class="line">        mergeSort(arr,temp,mid + <span class="number">1</span>,last);</span><br><span class="line">        <span class="keyword">int</span> i,j,k;</span><br><span class="line">i = start;</span><br><span class="line">j = mid + <span class="number">1</span>;</span><br><span class="line">k = start;</span><br><span class="line"><span class="keyword">while</span>(i != mid + <span class="number">1</span> &amp;&amp; j != last + <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(arr[i] &lt; arr[j])</span><br><span class="line">temp[k++] = arr[i++];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">temp[k++] = arr[j++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(i != mid + <span class="number">1</span>)</span><br><span class="line">temp[k++] = arr[i++];</span><br><span class="line"><span class="keyword">while</span>(j != last + <span class="number">1</span>)</span><br><span class="line">temp[k++] = arr[j++];</span><br><span class="line"><span class="keyword">for</span>(i = start;i &lt; last + <span class="number">1</span>;i++)</span><br><span class="line">arr[i] = temp[i];</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insertSort</span><span class="params">(T arr[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T temp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; n;i++)</span><br><span class="line">        <span class="keyword">if</span>(arr[i] &lt; arr[i - <span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            temp = arr[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i - <span class="number">1</span>;j &gt;= <span class="number">0</span> &amp;&amp; arr[j] &gt; temp;j--)</span><br><span class="line">                arr[j + <span class="number">1</span>] = arr[j];</span><br><span class="line">            arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(T arr[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T temp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n - <span class="number">1</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n - <span class="number">1</span> - i;j++)</span><br><span class="line">            <span class="keyword">if</span>(arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                temp = arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubbleSortPlus</span><span class="params">(T arr[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">    T temp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n - <span class="number">1</span> &amp;&amp; flag;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; n - <span class="number">1</span> - i;j++)</span><br><span class="line">            <span class="keyword">if</span>(arr[j] &gt; arr[j + <span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                flag = <span class="literal">true</span>;</span><br><span class="line">                temp = arr[j];</span><br><span class="line">                arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">choseSort</span><span class="params">(T arr[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">T temp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n - <span class="number">1</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>;j &lt; n;j++)</span><br><span class="line"><span class="keyword">if</span>(arr[i] &gt; arr[j])</span><br><span class="line">&#123;</span><br><span class="line">                temp = arr[j];</span><br><span class="line">                arr[j] = arr[i];</span><br><span class="line">                arr[i] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printArr</span><span class="params">(T arr[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, arr[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>执行条件：</p><p><strong>编译程序VC 6.0</strong></p><p><strong>数组成员 5000</strong></p><p>执行结果：</p><p><strong>随机快速排序用时0.001000sec</strong></p><p><strong>快速排序用时0.001000sec</strong></p><p><strong>归并排序用时0.002000sec</strong></p><p><strong>插入排序用时0.033000sec</strong></p><p><strong>冒泡排序用时0.090000sec</strong></p><p><strong>升级版冒泡排序用时0.089000sec</strong></p><p><strong>选择排序用时0.083000sec</strong></p><p>下面我们通过这段JAVA语言代码比较排序速度，直观感受时间复杂度。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Test.java</span></span><br><span class="line"><span class="keyword">package</span> pers.cz.sortcompare;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> pers.cz.sortcompare.Sort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> n = <span class="number">1000</span>;</span><br><span class="line">        <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">int</span>[] b = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">int</span>[] c = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">int</span>[] d = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">int</span>[] e = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">int</span>[] f = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">int</span>[] g = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">long</span> start, end;</span><br><span class="line">        Random rand = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">            g[i] = f[i] = e[i] = d[i] = c[i] = b[i] = a[i] = rand.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        start = System.currentTimeMillis();</span><br><span class="line">        Sort.QuickSort(a, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">        end = System.currentTimeMillis();</span><br><span class="line">        System.out.print(<span class="string">"QuickSort cost time(sec):"</span>);</span><br><span class="line">        System.out.println(end - start);</span><br><span class="line">        <span class="comment">//PrintArrData(a);</span></span><br><span class="line">        </span><br><span class="line">        start = System.currentTimeMillis();</span><br><span class="line">        Sort.QuickSortRand(b, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">        end = System.currentTimeMillis();</span><br><span class="line">        System.out.print(<span class="string">"QuickSortRand cost time(sec):"</span>);</span><br><span class="line">        System.out.println(end - start);</span><br><span class="line">        <span class="comment">//PrintArrData(b);</span></span><br><span class="line">        </span><br><span class="line">        start = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">int</span>[] temp = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        Sort.MargeSort(c, <span class="number">0</span>, n - <span class="number">1</span>, temp);</span><br><span class="line">        temp = <span class="keyword">null</span>;</span><br><span class="line">        end = System.currentTimeMillis();</span><br><span class="line">        System.out.print(<span class="string">"MargeSort cost time(sec):"</span>);</span><br><span class="line">        System.out.println(end - start);</span><br><span class="line">        <span class="comment">//PrintArrData(c);</span></span><br><span class="line"></span><br><span class="line">        start = System.currentTimeMillis();</span><br><span class="line">        Sort.InsertSort(d);</span><br><span class="line">        end = System.currentTimeMillis();</span><br><span class="line">        System.out.print(<span class="string">"InstertSort cost time(sec):"</span>);</span><br><span class="line">        System.out.println(end - start);</span><br><span class="line">        <span class="comment">//PrintArrData(d);</span></span><br><span class="line"></span><br><span class="line">        start = System.currentTimeMillis();</span><br><span class="line">        Sort.BubbleSortPlus(e);</span><br><span class="line">        end = System.currentTimeMillis();</span><br><span class="line">        System.out.print(<span class="string">"BubbleSortPlus cost time(sec):"</span>);</span><br><span class="line">        System.out.println(end - start);</span><br><span class="line">        <span class="comment">//PrintArrData(e);</span></span><br><span class="line"></span><br><span class="line">        start = System.currentTimeMillis();</span><br><span class="line">        Sort.BubbleSort(f);</span><br><span class="line">        end = System.currentTimeMillis();</span><br><span class="line">        System.out.print(<span class="string">"BubbleSort cost time(sec):"</span>);</span><br><span class="line">        System.out.println(end - start);</span><br><span class="line">        <span class="comment">//PrintArrData(f);</span></span><br><span class="line">        </span><br><span class="line">        start = System.currentTimeMillis();</span><br><span class="line">        Sort.ChoseSort(g);</span><br><span class="line">        end = System.currentTimeMillis();</span><br><span class="line">        System.out.print(<span class="string">"ChoseSort cost time(sec):"</span>);</span><br><span class="line">        System.out.println(end - start);</span><br><span class="line">        <span class="comment">//PrintArrData(g);</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">PrintArrData</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> value : arr) &#123;</span><br><span class="line">            System.out.println(value);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Sort.java</span></span><br><span class="line"><span class="keyword">package</span> pers.cz.sortcompare;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sort</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ChoseSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> temp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[i] &gt; arr[j]) &#123;</span><br><span class="line">                    temp = arr[i];</span><br><span class="line">                    arr[i] = arr[j];</span><br><span class="line">                    arr[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">BubbleSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> temp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                    temp = arr[j];</span><br><span class="line">                    arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                    arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">BubbleSortPlus</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> temp;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span> &amp;&amp; flag; i++) &#123;</span><br><span class="line">            flag = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                    flag = <span class="keyword">true</span>;</span><br><span class="line">                    temp = arr[j];</span><br><span class="line">                    arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                    arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">InsertSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> j, number;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] &lt; arr[i - <span class="number">1</span>]) &#123;</span><br><span class="line">                number = arr[i];</span><br><span class="line">                <span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span> &amp;&amp; arr[j] &gt; number; j--) &#123;</span><br><span class="line">                    arr[j + <span class="number">1</span>] = arr[j];</span><br><span class="line">                &#125;</span><br><span class="line">                arr[j + <span class="number">1</span>] = number;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">MargeSort</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> start, <span class="keyword">int</span> last, <span class="keyword">int</span>[] temp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (start &lt; last) &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (start + last) / <span class="number">2</span>;</span><br><span class="line">            Sort.MargeSort(arr, start, mid, temp);</span><br><span class="line">            Sort.MargeSort(arr, mid + <span class="number">1</span>, last, temp);</span><br><span class="line">            <span class="keyword">int</span> i, j, k;</span><br><span class="line">            i = start;</span><br><span class="line">            j = mid + <span class="number">1</span>;</span><br><span class="line">            k = start;</span><br><span class="line">            <span class="keyword">while</span> (i != mid + <span class="number">1</span> &amp;&amp; j != last + <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[i] &lt; arr[j]) &#123;</span><br><span class="line">                    temp[k++] = arr[i++];</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    temp[k++] = arr[j++];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (i != mid + <span class="number">1</span>) &#123;</span><br><span class="line">                temp[k++] = arr[i++];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (j != last + <span class="number">1</span>) &#123;</span><br><span class="line">                temp[k++] = arr[j++];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (i = start; i &lt; last + <span class="number">1</span>; i++) &#123;</span><br><span class="line">                arr[i] = temp[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">QuickSort</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> start, <span class="keyword">int</span> last)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (start &lt; last) &#123;</span><br><span class="line">            <span class="keyword">int</span> temp;</span><br><span class="line">            <span class="keyword">int</span> i = start;</span><br><span class="line">            <span class="keyword">int</span> j = last;</span><br><span class="line">            <span class="keyword">while</span> (i != j) &#123;</span><br><span class="line">                <span class="keyword">while</span> (arr[j] &gt;= arr[start] &amp;&amp; j != i) &#123;</span><br><span class="line">                    j--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">while</span> (arr[i] &lt;= arr[start] &amp;&amp; i != j) &#123;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (i != j) &#123;</span><br><span class="line">                    temp = arr[i];</span><br><span class="line">                    arr[i] = arr[j];</span><br><span class="line">                    arr[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = arr[start];</span><br><span class="line">            arr[start] = arr[i];</span><br><span class="line">            arr[i] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">QuickSortRand</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> start, <span class="keyword">int</span> last)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (start &lt; last) &#123;</span><br><span class="line">            <span class="keyword">int</span> temp;</span><br><span class="line">            <span class="keyword">int</span> i = start;</span><br><span class="line">            <span class="keyword">int</span> j = last;</span><br><span class="line">            Random rand = <span class="keyword">new</span> Random();</span><br><span class="line">            <span class="keyword">int</span> pos = rand.nextInt(last - start) + start;</span><br><span class="line">            temp = arr[start];</span><br><span class="line">            arr[start] = arr[pos];</span><br><span class="line">            arr[pos] = temp;</span><br><span class="line">            <span class="keyword">while</span> (i != j) &#123;</span><br><span class="line">                <span class="keyword">while</span> (arr[j] &gt;= arr[start] &amp;&amp; j != i) &#123;</span><br><span class="line">                    j--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">while</span> (arr[i] &lt;= arr[start] &amp;&amp; i != j) &#123;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (i != j) &#123;</span><br><span class="line">                    temp = arr[i];</span><br><span class="line">                    arr[i] = arr[j];</span><br><span class="line">                    arr[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = arr[start];</span><br><span class="line">            arr[start] = arr[i];</span><br><span class="line">            arr[i] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行条件：</p><p><strong>编译程序NetBeans IDE 8.1</strong></p><p><strong>数组成员 1000</strong></p><p>执行结果：</p><p><strong>QuickSort cost time(sec):1</strong></p><p><strong>QuickSortRand cost time(sec):0</strong></p><p><strong>MargeSort cost time(sec):1</strong></p><p><strong>InstertSort cost time(sec):5</strong></p><p><strong>BubbleSortPlus cost time(sec):14</strong></p><p><strong>BubbleSort cost time(sec):18</strong></p><p><strong>ChoseSort cost time(sec):9</strong></p>]]></content>
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
            <tag> 算法 </tag>
            
            <tag> 冒泡 </tag>
            
            <tag> 插入 </tag>
            
            <tag> 归并 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Test</title>
      <link href="/2018/03/22/Test/"/>
      <url>/2018/03/22/Test/</url>
      <content type="html"><![CDATA[<p>这是一个测试帖</p>]]></content>
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
            <tag> first </tag>
            
        </tags>
      
    </entry>
    
  
  
    
    <entry>
      <title>About</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>鄙人不才，小博供阅</p><h2 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h2><ul><li>QQ：<a href="http://wpa.qq.com/msgrd?v=3&amp;uin=2506649223&amp;site=qq&amp;menu=yes" target="_blank" rel="noopener">2506649223</a></li><li>Email：<a href="mailto:cz335360@gmail.com" target="_blank" rel="noopener">cz335360@gmail.com</a></li></ul>]]></content>
    </entry>
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
    <entry>
      <title>links</title>
      <link href="/links/index.html"/>
      <url>/links/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
  
</search>
